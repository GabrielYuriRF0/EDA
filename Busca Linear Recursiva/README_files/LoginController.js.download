app.controller("LoginController", function($scope, $http, $state, SessionService) {

	var self = this;
	self.userEmail = SessionService.userEmail;
	
    self.redirectIfNoLogged = function() {
        SessionService.redirectIfNoLogged();
    };

	self.login = function() {

		var provider = new firebase.auth.GoogleAuthProvider();
		provider.setCustomParameters({
  			'prompt': 'select_account'
		});
		
		firebase.auth().signInWithPopup(provider).then(function(result) {
		  
		  var token = result.credential.accessToken;
		  var user = result.user;

		  if (!user.email.endsWith("@computacao.ufcg.edu.br") && 
		  	!user.email.endsWith("@ccc.ufcg.edu.br") && 
            !user.email.endsWith("@copin.ufcg.edu.br") && 
            !user.email.endsWith("@dce.ufpb.br")) {

		  	$state.go("default_error");

		  	firebase.auth().signOut().then(function() {
            
        	}, function(error) {
        	});
		  	
		  	return;
		  
		  } else {
		  
			  SessionService.add(user.email, token);
			  $http.defaults.headers.common.Authorization = token;

			  $state.go('app.home');
		  }
		
		}).catch(function(error) {

		  $state.go('login');

		  // Handle Errors here.
		  var errorCode = error.code;
		  var errorMessage = error.message;
		  // The email of the user's account used.
		  var email = error.email;
		  // The firebase.auth.AuthCredential type that was used.
		  var credential = error.credential;
		  // ...

		  console.log(error);

		}); 
	};

    self.logout = function () {
        SessionService.destroy();
        $state.go('welcome');
    };

    (function main() {
        self.redirectIfNoLogged();
    })();

});
